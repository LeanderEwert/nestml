"""
DelayBasedVariablesWithMixedSolver.nestml
#########################################


Copyright statement
+++++++++++++++++++

This file is part of NEST.

Copyright (C) 2004 The NEST Initiative

NEST is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.

NEST is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with NEST.  If not, see <http://www.gnu.org/licenses/>.
"""

neuron delay_variables_mixed_solver:

  state:
    V_m mV = E_L   # Membrane potential
    w pA = 0 pA    # Spike-adaptation current
  end

  equations:
    inline V_bounded mV = min(V_m, V_peak) # prevent exponential divergence
    kernel g_in = exp(-t / tau_syn_in)
    kernel g_ex = exp(-t / tau_syn_ex)

    # Add inlines to simplify the equation definition of V_m
    inline exp_arg real = (V_bounded - V_th) / Delta_T
    inline I_spike pA = g_L * Delta_T * exp(exp_arg)
    inline I_syn_exc pA = convolve(g_ex, spikesExc) * (V_bounded - E_ex)
    inline I_syn_inh pA = convolve(g_in, spikesInh) * (V_bounded - E_in)

    V_m' = (-g_L * (V_bounded - E_L) + I_spike - I_syn_exc - I_syn_inh - w(t - delay) + I_e + I_stim) / C_m
    w' = (a * (V_bounded - E_L) - w) / tau_w
  end

  parameters:
    # membrane parameters
    C_m pF = 281.0 pF       # Membrane Capacitance
    t_ref ms = 0.0 ms       # Refractory period
    V_reset mV = -60.0 mV   # Reset Potential
    g_L nS = 30.0 nS        # Leak Conductance
    E_L mV = -70.6 mV       # Leak reversal Potential (aka resting potential)

    # spike adaptation parameters
    a nS = 4 nS             # Subthreshold adaptation
    b pA = 80.5 pA          # Spike-triggered adaptation
    Delta_T mV = 2.0 mV     # Slope factor
    tau_w ms = 144.0 ms     # Adaptation time constant
    V_th mV = -50.4 mV      # Threshold Potential
    V_peak mV = 0 mV        # Spike detection threshold

    # synaptic parameters
    E_ex mV = 0 mV            # Excitatory reversal Potential
    tau_syn_ex ms = 0.2 ms    # Synaptic Time Constant Excitatory Synapse
    E_in mV = -85.0 mV        # Inhibitory reversal Potential
    tau_syn_in ms = 2.0 ms    # Synaptic Time Constant for Inhibitory Synapse

    # constant external input current
    I_e pA = 0 pA

    # Delay parameter
    delay ms = 13.05 ms
  end

  internals:
    # refractory time in steps
    RefractoryCounts integer = steps(t_ref)
    # counts number of tick during the refractory period
    r integer
  end

  input:
    spikesInh nS <- inhibitory spike
    spikesExc nS <- excitatory spike
    I_stim pA <- continuous
  end

  output: spike

  update:
    integrate_odes()

    if r > 0: # refractory
      r -= 1 # decrement refractory ticks count
      V_m = V_reset # clamp potential
    elif V_m >= V_peak: # threshold crossing detection
      r = RefractoryCounts + 1
      V_m = V_reset # clamp potential
      w += b
      emit_spike()
    end

  end

end

