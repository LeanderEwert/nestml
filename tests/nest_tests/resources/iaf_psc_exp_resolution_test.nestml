"""
iaf_psc_exp_resolution_test
###########################

Description
+++++++++++

Used to test resolution() function.
"""
model iaf_psc_exp_resolution_test:
    state:
        r integer = 0                          # counts number of tick during the refractory period
        V_m mV = E_L
        a ms = resolution()
        I_syn_exc pA = 0 pA
        I_syn_inh pA = 0 pA

    equations:
        I_syn_exc' = -I_syn_exc / tau_syn_exc
        I_syn_inh' = -I_syn_inh / tau_syn_inh
        V_m' = -(V_m - E_L) / tau_m + (I_syn_exc + I_syn_inh + I_e + I_stim) / C_m

    parameters:
        C_m pF = 250 pF           # Capacitance of the membrane
        tau_m ms = 10 ms          # Membrane time constant
        tau_syn_inh ms = 2 ms     # Time constant of synaptic current
        tau_syn_exc ms = 2 ms     # Time constant of synaptic current
        t_ref ms = 2 ms           # Duration of refractory period
        E_L  mV = -70 mV          # Resting potential
        V_reset mV = -70 mV       # Reset value of the membrane potential
        Theta   mV = -55 mV       # Threshold potential

        # constant external input current
        I_e pA = 0 pA
        b ms = resolution()

    internals:
        RefractoryCounts integer = steps(t_ref) # refractory time in steps
        c ms = resolution()

    input:
        exc_spikes pA <- excitatory spike
        inh_spikes pA <- inhibitory spike
        I_stim pA <- continuous

    onReceive(exc_spikes):
        I_syn_exc += exc_spikes

    onReceive(inh_spikes):
        I_syn_inh += inh_spikes

    output:
        spike

    update:
        d ms = resolution()
        if r == 0: # neuron not refractory, so evolve V
            integrate_odes()
        else:
            r = r - 1 # neuron is absolute refractory

        if V_m >= Theta: # threshold crossing
            r = RefractoryCounts
            V_m = V_reset
            emit_spike()
