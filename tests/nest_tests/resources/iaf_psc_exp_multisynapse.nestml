"""
iaf_psc_exp_multisynapse - Leaky integrate-and-fire neuron model with multiple ports
####################################################################################

Description
+++++++++++

Used in NESTML unit testing.

For more information about the model, see iaf_psc_exp in the ``models`` directory.

For more information about "multisynapse" models, please refer to the NESTML documentation.
"""
model iaf_psc_exp_multisynapse_neuron:
    state:
        r integer = 0                # counts number of tick during the refractory period
        V_m mV = E_L  # membrane potential
        I_syn1 pA = 0 pA
        I_syn2 pA = 0 pA
        I_syn3 pA = 0 pA

    equations:
        inline I_syn pA = I_syn1 + I_syn2 + I_syn3
        I_syn1' = -I_syn1 / tau_syn1
        I_syn2' = -I_syn2 / tau_syn2
        I_syn3' = -I_syn3 / tau_syn3
        V_m' = -(V_m - E_L) / tau_m + (I_syn + I_e + I_stim) / C_m

    parameters:
        C_m pF = 250 pF           # Capacitance of the membrane
        tau_m ms = 10 ms          # Membrane time constant
        tau_syn1 ms = .2ms        # Time constant of synaptic current.
        tau_syn2 ms = 2ms         # Time constant of synaptic current.
        tau_syn3 ms = 20ms        # Time constant of synaptic current.
        t_ref ms = 2 ms           # Duration of refractory period
        E_L mV = -70 mV           # Resting potential
        V_reset mV = -70 mV       # Reset value of the membrane potential
        V_th mV = -55 mV          # Spike threshold potential
        I_e pA = 0 pA             # External current.

    internals:
        # refractory time in steps
        RefractoryCounts integer = steps(t_ref)

    input:
        spikes1 pA <- spike
        spikes2 pA <- spike
        spikes3 pA <- spike
        I_stim pA <- continuous

    onReceive(spikes1):
        I_syn1 += spikes1

    onReceive(spikes2):
        I_syn2 += spikes2

    onReceive(spikes3):
        I_syn3 += spikes3

    output:
        spike

    update:
        if r == 0: # neuron not refractory, so evolve V_m
            integrate_odes()
        else:
            r = r - 1 # neuron is absolute refractory

        process_input(spikes1, spikes2, spikes3)

        if V_m >= V_th: # threshold crossing
            r = RefractoryCounts
            V_m = V_reset
            emit_spike()
