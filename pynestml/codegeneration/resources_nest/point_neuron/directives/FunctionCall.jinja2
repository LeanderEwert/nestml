{#
  Generates C++ function call
  @param ast ASTFunctionCall
#}
{%- if tracing %}/* generated by {{self._TemplateReference__context.name}} */ {% endif %}
{%- if utils.is_integrate(ast) %}
{%-     if ast.get_args() | length > 0 %}
{%-       set analytic_state_variables_ = utils.filter_variables_list(analytic_state_variables_except_convolutions, ast.get_args()) %}
{%-     else %}
{%-       set analytic_state_variables_ = analytic_state_variables_except_convolutions %}
{%-     endif %}

{%-     include "directives/AnalyticIntegrationStep_begin.jinja2" %}

{%-     if uses_numeric_solver %}
{%-        include "directives/GSLIntegrationStep.jinja2" %}
{%-     endif %}

{%-     include "directives/AnalyticIntegrationStep_end.jinja2" %}
{%- else %}
{{printer.print(ast)}};
{%- endif %}
