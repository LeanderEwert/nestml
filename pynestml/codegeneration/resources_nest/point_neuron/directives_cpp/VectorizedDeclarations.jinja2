{%- if tracing %}/* generated by {{self._TemplateReference__context.name}} */ {% endif %}
{%- if stmt.has_comment() %}
{{stmt.print_comment('//')}}{%- endif %}
{%- if stmt.is_small_stmt() %}
{%-   with stmt = stmt.small_stmt %}
{%-     if stmt.is_declaration() %}
{%-         with ast = stmt.get_declaration() %}

{%- if tracing %}/* generated by {{self._TemplateReference__context.name}} */ {% endif %}
{%- for variable in declarations.get_variables(ast) %}
{%-   if ast.has_size_parameter() %}
std::vector< {{declarations.print_variable_type(variable)}} > {{variable.get_symbol_name()}}(output_vec.size(), {{declarations.print_variable_type(variable)}}(P_.{{declarations.print_size_parameter(ast)}}));
{%-     if ast.has_expression() %}
#pragma omp for
for(std::size_t i = 0; i < output_vec.size(); i++){
    for (long ii=0; ii < get_{{declarations.print_size_parameter(ast)}}(); i++) {
        {{variable.get_symbol_name()}}[i][ii] = {{printer_no_origin.print_with_indices(ast.getExpr(), "i")}};
    }
}
{%-     endif %}
{%-   else %}
{%-     if ast.has_expression() %}
std::vector< {{declarations.print_variable_type(variable)}} > {{variable.get_symbol_name()}}(output_vec.size());
#pragma omp for
for(std::size_t i = 0; i < output_vec.size(); i++){
    {{variable.get_symbol_name()}}[i] = {{printer_no_origin.print_with_indices(ast.get_expression(), "i")}};
}
{%-     else %}
std::vector< {{declarations.print_variable_type(variable)}} > {{variable.get_symbol_name()}}(output_vec.size());
{%-     endif %}
{%-   endif %}
{%- endfor -%}

{%-         endwith %}
{%-     endif %}
{%-   endwith %}
{%- endif %}