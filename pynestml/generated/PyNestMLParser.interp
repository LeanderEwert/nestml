token literal names:
null
null
null
null
null
null
'end'
'integer'
'real'
'string'
'boolean'
'void'
'function'
'inline'
'return'
'if'
'elif'
'else'
'for'
'while'
'in'
'step'
'inf'
'and'
'or'
'not'
'recordable'
'kernel'
'neuron'
'state'
'parameters'
'internals'
'initial_values'
'update'
'equations'
'input'
'output'
'current'
'spike'
'inhibitory'
'excitatory'
'...'
'('
')'
'+'
'~'
'|'
'^'
'&'
'['
'<-'
']'
'[['
']]'
'<<'
'>>'
'<'
'>'
'<='
'+='
'-='
'*='
'/='
'=='
'!='
'<>'
'>='
','
'-'
'='
'*'
'**'
'/'
'%'
'?'
':'
';'
'\''
null
null
null
null
null

token symbolic names:
null
SL_COMMENT
ML_COMMENT
NEWLINE
WS
LINE_ESCAPE
END_KEYWORD
INTEGER_KEYWORD
REAL_KEYWORD
STRING_KEYWORD
BOOLEAN_KEYWORD
VOID_KEYWORD
FUNCTION_KEYWORD
INLINE_KEYWORD
RETURN_KEYWORD
IF_KEYWORD
ELIF_KEYWORD
ELSE_KEYWORD
FOR_KEYWORD
WHILE_KEYWORD
IN_KEYWORD
STEP_KEYWORD
INF_KEYWORD
AND_KEYWORD
OR_KEYWORD
NOT_KEYWORD
RECORDABLE_KEYWORD
KERNEL_KEYWORD
NEURON_KEYWORD
STATE_KEYWORD
PARAMETERS_KEYWORD
INTERNALS_KEYWORD
INITIAL_VALUES_KEYWORD
UPDATE_KEYWORD
EQUATIONS_KEYWORD
INPUT_KEYWORD
OUTPUT_KEYWORD
CURRENT_KEYWORD
SPIKE_KEYWORD
INHIBITORY_KEYWORD
EXCITATORY_KEYWORD
ELLIPSIS
LEFT_PAREN
RIGHT_PAREN
PLUS
TILDE
PIPE
CARET
AMPERSAND
LEFT_SQUARE_BRACKET
LEFT_ANGLE_MINUS
RIGHT_SQUARE_BRACKET
LEFT_LEFT_SQUARE
RIGHT_RIGHT_SQUARE
LEFT_LEFT_ANGLE
RIGHT_RIGHT_ANGLE
LEFT_ANGLE
RIGHT_ANGLE
LEFT_ANGLE_EQUALS
PLUS_EQUALS
MINUS_EQUALS
STAR_EQUALS
FORWARD_SLASH_EQUALS
EQUALS_EQUALS
EXCLAMATION_EQUALS
LEFT_ANGLE_RIGHT_ANGLE
RIGHT_ANGLE_EQUALS
COMMA
MINUS
EQUALS
STAR
STAR_STAR
FORWARD_SLASH
PERCENT
QUESTION
COLON
SEMICOLON
DIFFERENTIAL_ORDER
BOOLEAN_LITERAL
STRING_LITERAL
NAME
UNSIGNED_INTEGER
FLOAT

rule names:
dataType
unitType
unitTypeExponent
expression
simpleExpression
unaryOperator
bitOperator
comparisonOperator
logicalOperator
indexParameter
variable
functionCall
inlineExpression
odeEquation
kernel
block
stmt
compoundStmt
smallStmt
assignment
declaration
returnStmt
ifStmt
ifClause
elifClause
elseClause
forStmt
whileStmt
nestMLCompilationUnit
neuron
body
blockWithVariables
updateBlock
equationsBlock
inputBlock
inputPort
inputQualifier
outputBlock
function
parameter


atn:
